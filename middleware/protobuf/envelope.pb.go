// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: envelope.proto

package protobuf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Envelope wraps user protocol buffer messages with routing metadata.
// This message type is internal to the Velaros protobuf middleware and is
// transparent to users - they work directly with their own .proto definitions.
//
// The envelope provides:
//   - Message ID for request/reply correlation
//   - Path for routing to handlers
//   - Data field containing the user's serialized protobuf message
//
// Users define their own .proto schemas following the standard Protocol Buffers
// tutorial and use them directly with Velaros. The middleware automatically
// wraps and unwraps messages in this envelope format.
type Envelope struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// id is the message identifier used for request/reply correlation.
	// Optional for one-way messages, required for request/reply patterns.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// path is the message path used for routing to handlers.
	// Format can be gRPC-style ("/package.Service/Method") or custom ("/api/users/get").
	Path string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	// data contains the user's serialized protocol buffer message.
	// This is the bytes from proto.Marshal(userMessage).
	Data          []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Envelope) Reset() {
	*x = Envelope{}
	mi := &file_envelope_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Envelope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Envelope) ProtoMessage() {}

func (x *Envelope) ProtoReflect() protoreflect.Message {
	mi := &file_envelope_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Envelope.ProtoReflect.Descriptor instead.
func (*Envelope) Descriptor() ([]byte, []int) {
	return file_envelope_proto_rawDescGZIP(), []int{0}
}

func (x *Envelope) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Envelope) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Envelope) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_envelope_proto protoreflect.FileDescriptor

const file_envelope_proto_rawDesc = "" +
	"\n" +
	"\x0eenvelope.proto\x12\x10velaros.protobuf\"B\n" +
	"\bEnvelope\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\x12\x12\n" +
	"\x04data\x18\x03 \x01(\fR\x04dataB5Z3github.com/RobertWHurst/velaros/middleware/protobufb\x06proto3"

var (
	file_envelope_proto_rawDescOnce sync.Once
	file_envelope_proto_rawDescData []byte
)

func file_envelope_proto_rawDescGZIP() []byte {
	file_envelope_proto_rawDescOnce.Do(func() {
		file_envelope_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_envelope_proto_rawDesc), len(file_envelope_proto_rawDesc)))
	})
	return file_envelope_proto_rawDescData
}

var file_envelope_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_envelope_proto_goTypes = []any{
	(*Envelope)(nil), // 0: velaros.protobuf.Envelope
}
var file_envelope_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_envelope_proto_init() }
func file_envelope_proto_init() {
	if File_envelope_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_envelope_proto_rawDesc), len(file_envelope_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_envelope_proto_goTypes,
		DependencyIndexes: file_envelope_proto_depIdxs,
		MessageInfos:      file_envelope_proto_msgTypes,
	}.Build()
	File_envelope_proto = out.File
	file_envelope_proto_goTypes = nil
	file_envelope_proto_depIdxs = nil
}
